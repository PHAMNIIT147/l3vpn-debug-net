# This practic followed the instruction from https://blog.swineson.me/en/use-linux-as-an-mpls-router/
# Use FRR stable/7.3, build support fpm. Source /home/admin/frr
# Use fpmstub. Sourc /home/admin/fpm-stub
# Ubuntu18.04.03 Qemu VM. sodu user/pass: admin/frr. Root user/pass: root/frr
# GNS3 template: u18FRR
# GNS3 project: ubuntu-18-04-frr-l3vpn-static
# Developer can use this setup by doing the following steps: section 2) and section 3)
# Developer can stand in the linux server and ssh to u18FRR routers: ssh root@ip_of_u18frr_router_ens3, cd /home/admin/fpm-stub; ./fpm-stub to observe frr send routing information to this fpm.
# Developer can update his own development Qemu image by:
## to avoid corrupt the common template image, he has to copy this template image in to his own image and create new template from this copied image.
## he can update his Qemu image when needing: configure his template --> advance -> uncheck associate link to image. 
## then ceate node, update code ..., shut down, and then --> Open his template --> advance --> check associate link to image. And create his network and run.

topology:                                   RR(ens4)
                                               |
					       |             (ens4)
CE1.s1(ens4) -- (ens5)PE1(ens4) -- (ens5)P(ens6) -- (ens4)PE2(ens5) -- (ens4)CE1.s2
CE2.s1(ens4) -- (ens6)                                       (ens6) -- (ens4)CE2.s2

1) Common for all routers. This part was setup in u18FRR router already:
#enable frr
	sed -i "s/=no/=yes/g" /etc/frr/daemons
	vi /etc/frr/daemons
	edit sharpd=no
	service frr stop
	service frr start
	ps -ef | grep frr

#load mpls modules
	modprobe mpls_router
	modprobe mpls_iptunnel
	modprobe mpls_gso
	modprobe dummy numdummies=1

	cat >/etc/modules-load.d/mpls.conf <<EOF
	mpls_router
	mpls_iptunnel
	mpls_gso
	dummy
	EOF

	cat >/etc/modules-load.d/dummy.conf <<EOF
	dummy
	EOF

	cat >/etc/modprobe.d/dummy.conf <<EOF
	options dummy numdummies=1
	EOF

# add dummy0 device on boot:
	vi /etc/systemd/network/dummy0.netdev
	    [NetDev]
	    Name=dummy0
	    Kind=dummy

#enable kernel routing
	cat >/etc/sysctl.d/90-mpls-router.conf <<EOF
	net.ipv4.ip_forward=1
	net.ipv6.conf.all.forwarding=1
	net.ipv4.conf.all.rp_filter=0
	net.mpls.platform_labels=1048575
	net.ipv4.tcp_l3mdev_accept=1
	net.ipv4.udp_l3mdev_accept=1
	net.mpls.conf.lo.input=1
	net.mpls.conf.ens4.input=1
	net.mpls.conf.ens5.input=1
	net.mpls.conf.ens6.input=1
	net.mpls.conf.ens7.input=1
	net.mpls.conf.ens8.input=1
	net.mpls.conf.ens9.input=1
	net.mpls.conf.ens10.input=1
	EOF
	sysctl -p /etc/sysctl.d/90-mpls-router.conf

2) specific router configuration:
2.1) P:
	ip link set ens4 up
	ip link set ens5 up
	ip link set ens6 up
	ip addr add 192.168.1.5 peer 192.168.1.6 dev ens4
	ip addr add 192.168.1.2 peer 192.168.1.1 dev ens5
	ip addr add 192.168.1.3 peer 192.168.1.7 dev ens6
	ip link add dummy0 type dummy
	ip link set dummy0 up
	ip addr add 10.0.0.2/32 dev dummy0
	vtysh
	conf term
	interface ens4
	 ip ospf network point-to-point
	interface ens5
	 ip ospf network point-to-point
	interface ens6
	 ip ospf network point-to-point
	router ospf
	 ospf router-id 10.0.0.2
	 redistribute connected
	 redistribute static
	 network 10.0.0.0/24 area 0
	 network 192.168.1.0/24 area 0

2.1.1) P1:
	ip link set ens4 up
	ip link set ens5 up
	ip addr add 192.168.1.7 peer 192.168.1.3 dev ens4
	ip addr add 192.168.1.8 peer 192.168.1.4 dev ens5
	ip link add dummy0 type dummy
	ip link set dummy0 up
	ip addr add 10.0.0.5/32 dev dummy0
	vtysh
	conf term
	interface ens4
	 ip ospf network point-to-point
	interface ens5
	 ip ospf network point-to-point
	router ospf
	 ospf router-id 10.0.0.5
	 redistribute connected
	 redistribute static
	 network 10.0.0.0/24 area 0
	 network 192.168.1.0/24 area 0

2.2) PE1:
	ip link set ens4 up
	ip link set ens5 up
	ip link set ens6 up
	ip link set ens7 up
	ip addr add 192.168.1.1 peer 192.168.1.2 dev ens4
	ip addr add 172.19.1.3 peer 172.19.1.4 dev ens7
	ip link add dummy0 type dummy
	ip link set dummy0 up
	ip addr add 10.0.0.1/32 dev dummy0
	vtysh
	conf term
	interface ens4
	 ip ospf network point-to-point
	router ospf
	 ospf router-id 10.0.0.1
	 redistribute connected
	 redistribute static
	 network 10.0.0.0/24 area 0
	 network 192.168.1.0/24 area 0
  
2.3) PE2:
	ip link set ens4 up
	ip link set ens5 up
	ip link set ens6 up
	ip addr add 192.168.1.4 peer 192.168.1.8 dev ens4
	ip link set ens7 up
	ip addr add 172.19.2.3 peer 172.19.2.4 dev ens7
	ip link add dummy0 type dummy
	ip link set dummy0 up
	ip addr add 10.0.0.3/32 dev dummy0
	vtysh
	conf term
	interface ens4
	 ip ospf network point-to-point
	router ospf
	 ospf router-id 10.0.0.3
	 redistribute connected
	 redistribute static
	 network 10.0.0.0/24 area 0
	 network 192.168.1.0/24 area 0

2.4) RR:
	ip link set ens4 up
	ip addr add 192.168.1.6 peer 192.168.1.5 dev ens4
	ip link add dummy0 type dummy
	ip link set dummy0 up
	ip addr add 10.0.0.4/32 dev dummy0
	vtysh
	conf term
	interface ens4
	 ip ospf network point-to-point
	router ospf
	 ospf router-id 10.0.0.4
	 redistribute connected
	 redistribute static
	 network 10.0.0.0/24 area 0
	 network 192.168.1.0/24 area 0


2.5) CE1.site1 and CE2.site1:
# linux shell
	ip link set ens4 up
	ip addr add 172.19.1.2/24 dev ens4
	ip route add default via 172.19.1.1

2.6 CE1.site2 and CE2.site2:
# linux shell
	ip link set ens4 up
	ip addr add 172.19.2.2/24 dev ens4
	ip route add default via 172.19.2.1

2.7) CE1.site3:
# linux shell
	ip link set ens4 up
	ip addr add 172.19.1.4/24 dev ens4
	ip route add default via 172.19.1.3

2.8) CE1.site4:
# linux shell
	ip link set ens4 up
	ip addr add 172.19.2.4/24 dev ens4
	ip route add default via 172.19.2.3


3) verify:
#vefiy IGP OSPF at PE1:
	ping -I 10.0.0.1 10.0.0.5 -c 1
	ping -I 10.0.0.1 10.0.0.4 -c 1
	ping -I 10.0.0.1 10.0.0.3 -c 1
	ping -I 10.0.0.1 10.0.0.2 -c 1

#Verify mpls ldp at P:
	vtysh
show mpls ldp neighbor

#Verify BGP at PE1:
	vtysh
show ip bgp summary

#Verify VRF and BGP at CE1.s1: 
	ping -I 172.19.1.2 172.19.2.2
#Verify VRF and BGP at CE2.s1: 
	ping -I 172.19.1.2 172.19.2.2
